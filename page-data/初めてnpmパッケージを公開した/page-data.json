{"componentChunkName":"component---src-templates-blog-post-js","path":"/初めてnpmパッケージを公開した/","result":{"data":{"site":{"siteMetadata":{"title":"eginoy Blog"}},"markdownRemark":{"id":"79d0d0c4-4100-5d8c-81b7-aee220f6b239","excerpt":"作ったもの gatsbyの新規記事テンプレートを生成するcliツール 目標 でインストールし、 のように利用できるようにする。   インストールするだけでcliから利用可能にしたい 前回の記事ではのにコマンド名とスクリプトのパスを設定することでcliから利用することができた。 今回はnpm…","html":"<h2>作ったもの</h2>\n<p>gatsbyの新規記事テンプレートを生成する<a href=\"https://github.com/eginoy/gatsby_new_post_script\">cliツール</a></p>\n<h2>目標</h2>\n<p><code class=\"language-text\">$ yarn add --dev gatsby-new-post-generator</code>でインストールし、<br>\n<code class=\"language-text\">$ yarn newpost ${blogTitle}</code>のように利用できるようにする。  </p>\n<h2>インストールするだけでcliから利用可能にしたい</h2>\n<p><a href=\"https://eginoy.github.io/%E6%96%B0%E8%A6%8F%E8%A8%98%E4%BA%8B%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%92%E6%9B%B8%E3%81%84%E3%81%9F/\">前回の記事</a>では<code class=\"language-text\">package.json</code>の<code class=\"language-text\">script</code>にコマンド名とスクリプトのパスを設定することでcliから利用することができた。<br>\n今回はnpmパッケージとして扱いたいので、package.jsonを作成する。<br>\n<code class=\"language-text\">$ npm init</code><br>\nパッケージ名やその他諸々の情報を含んだpackage.jsonが生成される。  </p>\n<p>npmリポジトリからインストール後、追加設定(package.jsonのscriptへ追記)を行うことなくcliから利用できるようにしたい。<br>\nそのため、以下のようにpackage.jsonを変更した。</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby-new-post-generator\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Generate gatsby new post(.md) cli script\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./lib/newpost.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"bin\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"newpost\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bin/index.js\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"repository\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"git\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"git+ssh://git@github.com/eginoy/gatsby-new-post-generator.git\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eginoy\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"bugs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/eginoy/gatsby-new-post-generator/issues\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"homepage\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/eginoy/gatsby-new-post-generator\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"gatsby-new-post\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"directories\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lib\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">main</code>と<code class=\"language-text\">bin</code>の設定がポイントで、<code class=\"language-text\">bin</code>に設定した<code class=\"language-text\">newpost</code>がcliから呼び出す際のスクリプト名称になっている。<br>\n処理は<code class=\"language-text\">main</code>で指定している<code class=\"language-text\">./lib/newpost.js</code>に記述している。  </p>\n<h3>ローカルで動作確認</h3>\n<p><code class=\"language-text\">yarn add</code>コマンドの引数にファイルパスを渡すと、ローカルのパッケージを追加することが可能。<br>\nそのため、npmjsリポジトリへ公開する前にローカルで動作確認を行うことができる。<br>\n<code class=\"language-text\">$ cd ${gatsby_blog_directory}</code><br>\n<code class=\"language-text\">$ yarn add --dev ../gatsby-new-post-generator</code>  </p>\n<h3>動作確認</h3>\n<p>newpostでの記事生成前</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ tree content/blog/\ncontent/blog/\n├── Gatsbyでブログを作った\n│   └── index.md\n├── Ubuntu20.04でVisualStudioCodeがクラッシュする\n│   └── index.md\n├── 初めてnpmパッケージを公開した\n│   └── index.md\n└── 新規記事を作成するスクリプトを書いた\n    └── index.md</code></pre></div>\n<p>以下のコマンドで新しい投稿を生成<br>\n<code class=\"language-text\">$ yarn newpost HelloWorld!</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ tree content/blog/\ncontent/blog/\n├── Gatsbyでブログを作った\n│   └── index.md\n├── HelloWorld! //newpostコマンドで生成\n│   └── index.md\n├── Ubuntu20.04でVisualStudioCodeがクラッシュする\n│   └── index.md\n├── 初めてnpmパッケージを公開した\n│   └── index.md\n└── 新規記事を作成するスクリプトを書いた\n    └── index.md</code></pre></div>\n<h2>公開手順</h2>\n<h3>npmjsのアカウントを作成する</h3>\n<p><a href=\"https://www.npmjs.com/signup\">ここ</a>からサインアップする<br>\n自分はnpmjs用のメールアドレスを新しく作成した。(スパムメール対策)  </p>\n<p><code class=\"language-text\">$ npm login</code>でログインする</p>\n<h3>公開する</h3>\n<p>公開したいパッケージのディレクトリへ移動する<br>\n<code class=\"language-text\">$ cd ${npm_package_dir}</code><br>\nnpmリポジトリへ公開<br>\n<code class=\"language-text\">$ npm publish</code></p>\n<h2>学べたこと</h2>\n<p>npmとyarnはパッケージをインストールしたときの挙動が微妙に違うことがわかった。<br>\n今回のようにcli-toolとして利用したいとき、<br>\nyarnを利用すると、<code class=\"language-text\">--dev</code>オプションを利用した場合でも<code class=\"language-text\">yarn newpost</code>のように利用できた。(開発関係依存として追加したプロジェクト内でスコープを限定できる)<br>\nしかし、npmの<code class=\"language-text\">--save-dev</code>オプションで開発依存関係としてパッケージをインストールすると<code class=\"language-text\">npm run newpost</code>、<code class=\"language-text\">npm newpost</code>のように利用することができなかった。<br>\n(グローバルインストール(<code class=\"language-text\">-g</code>オプション)すれば、bash aliasのように<code class=\"language-text\">newpost</code>で使用できるが、gatsbyの記事生成で利用するだけなので適当でない)</p>\n<h2>所感</h2>\n<p>npmパッケージはインストールして利用するだけで、作成するのは今回が初めてだった。<br>\nそもそもこのような形でまとめるのも初めてで、とても大変だった。<br>\nしかし、やってみると今まで曖昧にしてきた部分を調べ直したりしたので、良い学習になった。\nまた、意外と手軽にnpmパッケージを作ることができることがわかり、良い経験になった。</p>\n<h2>参考</h2>\n<ul>\n<li><a href=\"https://nodachisoft.com/common/jp/article/jp000110/\">https://nodachisoft.com/common/jp/article/jp000110/</a></li>\n<li><a href=\"https://blog.npmjs.org/post/118810260230/building-a-simple-command-line-tool-with-npm\">https://blog.npmjs.org/post/118810260230/building-a-simple-command-line-tool-with-npm</a></li>\n<li><a href=\"https://qiita.com/suzuki_sh/items/f3349efbfe1bdfc0c634\">https://qiita.com/suzuki_sh/items/f3349efbfe1bdfc0c634</a></li>\n<li><a href=\"https://medium.com/jspoint/creating-cli-executable-global-npm-module-5ef734febe32\">https://medium.com/jspoint/creating-cli-executable-global-npm-module-5ef734febe32</a></li>\n<li><a href=\"https://note.kiriukun.com/entry/20190417-path-resolve\">https://note.kiriukun.com/entry/20190417-path-resolve</a></li>\n</ul>","frontmatter":{"title":"初めてnpmパッケージを作って公開した","date":"March 31, 2021","description":null}},"previous":{"fields":{"slug":"/新規記事を作成するスクリプトを書いた/"},"frontmatter":{"title":"新規記事を作成するスクリプトを書いた"}},"next":{"fields":{"slug":"/大学生になった/"},"frontmatter":{"title":"大学生になった"}}},"pageContext":{"id":"79d0d0c4-4100-5d8c-81b7-aee220f6b239","previousPostId":"9f0d5890-5d07-5599-ba59-834e0ce23c5e","nextPostId":"6635d5b8-6835-5227-ac02-83196435e3e9"}},"staticQueryHashes":["2841359383","3257411868"]}